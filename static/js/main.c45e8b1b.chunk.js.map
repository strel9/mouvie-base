{"version":3,"sources":["assets/images/logo.svg","assets/images/no_foto.jpg","redux/reducers/filters.js","redux/reducers/movies.js","redux/reducers/index.js","redux/store/store.js","Components/image/Image.jsx","Components/Header.jsx","utils/api.js","redux/actions/filters.js","Components/Sidebar.jsx","Components/LikeButton.jsx","Components/MovieItem.jsx","Components/MoviesList.jsx","pages/Home.jsx","redux/actions/movies.js","pages/MoviePage.jsx","Components/App.js","index.js"],"names":["module","exports","initialState","sortBy","moviesGenre","id","name","moviesGenreActive","sortByPrimaryReleaseYear","moviesWillWatch","currentPage","totalPages","filters","state","action","type","payload","items","isLoaded","selectedMovieObj","movies","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","Image","src","alt","className","width","height","circle","attrs","classes","classNames","Header","Navbar","to","logo","API_URL","API_KEY_3","setMoviesWillWatch","setCurrentPage","page","setMoviesGenreActive","value","Sidebar","onChangeSortBy","onChangeYear","dispatch","useDispatch","useSelector","years","index","Date","getFullYear","push","generateMoviesYearRelease","map","item","key","Form","Label","Control","variant","as","onChange","isActive","indexOf","Button","onClick","updateCurrentGenre","filter","removeMoviesGenre","addMoviesGenre","disabled","LikeButton","movie","buttonLike","includes","updateMoviesWillWatch","removeMovieToWillWatch","style","color","addMovieToWillWatch","MovieItem","cardImage","poster_path","imgNoFotoIdDb","title","background","backgroundPadding","vote_average","text","strokeWidth","styles","buildStyles","backgroundColor","textColor","pathColor","trailColor","MoviesList","removeMovie","movieItems","Row","Col","xs","md","lg","Home","loading","useEffect","fetch","then","response","json","data","results","total_pages","genres","Container","sm","e","target","setSortBy","setSortByPrimaryReleaseYear","Spinner","animation","MoviePage","movieId","setMovie","setMovieTrailer","useState","movieTrailers","overview","Tabs","defaultActiveKey","Tab","eventKey","release_date","original_language","backdrop_path","App","path","component","exact","render","match","params","ReactDOM","document","getElementById"],"mappings":"kFAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,wLCArCC,EAAe,CACpBC,OAAQ,kBACRC,YAAa,CACZ,CAAEC,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,GAAIC,KAAM,aAChB,CAAED,GAAI,GAAIC,KAAM,aAChB,CAAED,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,GAAIC,KAAM,SAChB,CAAED,GAAI,GAAIC,KAAM,eAChB,CAAED,GAAI,GAAIC,KAAM,SAChB,CAAED,GAAI,MAAOC,KAAM,WAEpBC,kBAAmB,GACnBC,yBAA0B,KAC1BC,gBAAiB,CAAC,QAClBC,YAAa,EACbC,WAAY,GAyCEC,EAtCC,WAAmC,IAAlCC,EAAiC,uDAAzBX,EAAcY,EAAW,uCACjD,OAAQA,EAAOC,MACd,IAAK,cACJ,OAAO,2BACHF,GADJ,IAECV,OAAQW,EAAOE,UAEjB,IAAK,uBACJ,OAAO,2BACHH,GADJ,IAECJ,gBAAiBK,EAAOE,UAE1B,IAAK,kBACJ,OAAO,2BACHH,GADJ,IAECF,WAAYG,EAAOE,UAErB,IAAK,mBACJ,OAAO,2BACHH,GADJ,IAECH,YAAaI,EAAOE,UAEtB,IAAK,0BACJ,OAAO,2BACHH,GADJ,IAECN,kBAAmBO,EAAOE,UAE5B,IAAK,mCACJ,OAAO,2BACHH,GADJ,IAECL,yBAA0BM,EAAOE,UAGnC,QACC,OAAOH,ICrDJX,EAAe,CACpBe,MAAO,GACPC,UAAU,EACVC,iBAAkB,IA6BJC,EA1BA,WAAmC,IAAlCP,EAAiC,uDAAzBX,EAAcY,EAAW,uCAChD,OAAQA,EAAOC,MACd,IAAK,aACJ,OAAO,2BACHF,GADJ,IAECI,MAAOH,EAAOE,QACdE,UAAU,IAGZ,IAAK,aACJ,OAAO,2BACHL,GADJ,IAECK,SAAUJ,EAAOE,UAGnB,IAAK,yBACJ,OAAO,2BACHH,GADJ,IAECM,iBAAkBL,EAAOE,UAG3B,QACC,OAAOH,IClBKQ,EALKC,YAAgB,CACnCV,UACAQ,WCJKG,EAAmBC,OAAOC,sCAAwCC,IAIzDC,EAFDC,YAAYP,EAAaE,K,uCC6BxBM,G,MA5BD,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,IAAKC,EAAsD,EAAtDA,IAAKC,EAAiD,EAAjDA,UAAWC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,OAAWC,EAAY,mEACrEC,EAAUC,IAAWN,EAAW,CAAEG,WAMxC,OAAO,uCAAKL,IAAKA,EAAKC,IAAKA,EAAKC,UAAWK,EAASJ,MAAOA,EAAOC,OAAQA,GAAYE,M,iBCiBxEG,EApBA,WACd,OACC,yBAAKP,UAAU,oCACd,yBAAKA,UAAU,aACd,kBAACQ,EAAA,EAAD,CAAQR,UAAU,4DAEjB,kBAAC,IAAD,CAAMA,UAAU,qBAAqBS,GAAG,gBACvC,kBAAC,EAAD,CAAOX,IAAKY,IAAMX,IAAI,OAAOE,MAAO,GAAIC,OAAQ,UCjBzCS,EAAU,gCAEVC,EAAY,mC,wBCIZC,EAAqB,SAACzB,GAAD,MAAa,CAC9CL,KAAM,uBACNC,QAASI,IAQG0B,EAAiB,SAACC,GAAD,MAAW,CACxChC,KAAM,mBACNC,QAAS+B,IAQGC,EAAuB,SAACC,GAAD,MAAY,CAC/ClC,KAAM,0BACNC,QAASiC,IC+IKC,EA1JC,SAAC,GAYV,IAJNC,EAIK,EAJLA,eACAC,EAGK,EAHLA,aAIMC,EAAWC,cADZ,EAG+DC,aACnE,qBAAG3C,WADIR,EAHH,EAGGA,YAAaG,EAHhB,EAGgBA,kBAAmBI,EAHnC,EAGmCA,WAAYD,EAH/C,EAG+CA,YAuB9C8C,EAT4B,WAEjC,IADA,IAAIA,EAAQ,GACHC,GAAQ,IAAIC,MAAOC,cAAeF,EAAQ,KAAMA,IACxDD,EAAMI,KAAKH,GAEZ,OAAOD,EAEcK,GAEMC,KAAI,SAACC,GAAD,OAC/B,4BAAQC,IAAKD,EAAMd,MAAOc,GACxBA,MA2BH,OACC,kBAACE,EAAA,EAAD,CAAMjC,UAAU,oBACf,wBAAIA,UAAU,eAAd,WACA,yBAAKA,UAAU,QACd,kBAACiC,EAAA,EAAKC,MAAN,iBACA,kBAACD,EAAA,EAAKE,QAAN,CAAcC,QAAQ,OAAOC,GAAG,SAASC,SAAUnB,GAtDpC,CACjB,CAAE9C,GAAI,kBAAmBC,KAAM,qBAC/B,CAAED,GAAI,iBAAkBC,KAAM,qBAC9B,CAAED,GAAI,oBAAqBC,KAAM,uBACjC,CAAED,GAAI,mBAAoBC,KAAM,uBAChC,CAAED,GAAI,oBAAqBC,KAAM,eACjC,CAAED,GAAI,mBAAoBC,KAAM,eAChC,CAAED,GAAI,qBAAsBC,KAAM,aAClC,CAAED,GAAI,sBAAuBC,KAAM,cA+CrBwD,KAAI,SAACC,GAAD,OACd,4BAAQC,IAAKD,EAAKzD,KAAM2C,MAAOc,EAAK1D,IAClC0D,EAAKzD,WAKV,yBAAK0B,UAAU,QACd,kBAACiC,EAAA,EAAKC,MAAN,CAAYlC,UAAU,IAAtB,iBACA,kBAACiC,EAAA,EAAKE,QAAN,CAAcE,GAAG,SAASC,SAAUlB,GACnC,qDACCI,IAGH,yBAAKxB,UAAU,QACd,kBAACiC,EAAA,EAAKC,MAAN,2BACA,yBAAKlC,UAAU,UACd,yBAAKA,UAAU,IACb5B,EAAY0D,KAAI,YAAmB,IAAhBxD,EAAe,EAAfA,KAAMD,EAAS,EAATA,GACnBkE,GAA8C,IAAnChE,EAAkBiE,QAAQnE,GAE3C,OACC,kBAACoE,EAAA,EAAD,CACCT,IAAK3D,EACL2B,UAAWuC,EAAW,SAAW,GACjCH,QAAQ,eACRM,QAAS,kBAAOH,EAjDE,SAAClE,GAC1B,IAAMsE,EAAqBpE,EAAkBqE,QAAO,SAACb,GAAD,OAAUA,IAAS1D,KACvEgD,EAASL,EAAqB2B,IA+CIE,CAAkBxE,GAvD9B,SAACA,GACvB,IAAMsE,EAAkB,sBAAOpE,GAAP,CAA0BF,IAClDgD,EAASL,EAAqB2B,IAC9BtB,EAASP,EAAe,IAoDkCgC,CAAezE,KACjEC,SAUP,yBAAK0B,UAAU,kDACd,kBAACyC,EAAA,EAAD,CACCM,SAA0B,IAAhBrE,EACVsB,UAAU,qBACVoC,QAAQ,OACRM,QAAS,WAtDRhE,GAAe,GAElB2C,EAASP,EADiBpC,EAAc,MAiDvC,QAQA,yBAAKsB,UAAU,yBACbrB,EAAU,UAAMD,EAAN,yBAAwBC,GAAe,IAGnD,kBAAC8D,EAAA,EAAD,CACCzC,UAAU,qBACVoC,QAAQ,OACRM,QAAS,WArEZrB,EAASP,EADiBpC,EAAc,MAmEtC,c,iCC5DWsE,EAtEI,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf5B,EAAWC,cAEX7C,EAAkB8C,aAAY,qBAAG3C,QAAsBH,mBA0BvDyE,EAAazE,EAAgB0E,SAASF,EAAM5E,IACjD,4BACC2B,UAAU,oBAEV0C,QAAS,YAfoB,SAACO,GAK/B,IAAMG,EAAwB3E,EAAgBmE,QAAO,SAACb,GAAD,OAAUA,IAASkB,EAAM5E,MAG9EgD,EAASR,EAAmBuC,IAY1BC,CAAuBJ,KAExB,kBAAC,IAAD,CACCjD,UAAU,iBACV1B,KAAK,QAELgF,MAAO,CAAEC,MAAO,wBAIlB,4BACCvD,UAAU,WAEV0C,QAAS,YAtCiB,SAACO,GAC5B,IAAMG,EAAqB,sBAAO3E,GAAP,CAAwBwE,EAAM5E,KACzDgD,EAASR,EAAmBuC,IAyC1BI,CAAoBP,KAErB,kBAAC,IAAD,CACCjD,UAAU,iBACV1B,KAAK,QAELgF,MAAO,CAAEC,MAAO,wBAKnB,OAAO,oCAAGL,I,iCCqBIO,EAzEG,SAAC,GAAe,IAAbR,EAAY,EAAZA,MAuBdS,EAAYT,EAAMU,YACvB,oCACC,kBAAC,EAAD,CACC3D,UAAU,eACVF,IAAG,yCAAoCmD,EAAMU,aAC7C5D,IAAI,cAIN,kBAAC,EAAD,CAAOC,UAAU,eAAeF,IAAK8D,IAAe7D,IAAI,aASzD,OACC,yBAAKC,UAAU,QACd,kBAAC,IAAD,CAAMS,GAAE,4BAAuBwC,EAAM5E,KAAOqF,GAE5C,6BACC,wBAAI1D,UAAU,kBAAkBiD,EAAMY,OAEtC,yBAAK7D,UAAU,oBAAoBsD,MAAO,CAAErD,MAAO,GAAIC,OAAQ,KAC9D,kBAAC,IAAD,CACCF,UAAU,GACV8D,YAAU,EACVC,kBAAmB,EACnB9C,MAA4B,GAArBgC,EAAMe,aACbC,KAAI,UAA0B,GAArBhB,EAAMe,aAAX,KACJE,YAAa,EACbC,OAAQC,YAAY,CACnBC,gBAAiB,UACjBC,UAAW,UAEXC,UAAW,UACXC,WAAY,QAIf,yBAAKxE,UAAU,kBACd,kBAAC,EAAD,CAAYiD,MAAOA,QC5DTwB,EApBI,SAAC,GAAoB,EAAlBC,YAAmB,IAClCC,EAAapD,aAAY,qBAAGnC,OAAoBH,SACtD,OACC,kBAAC2F,EAAA,EAAD,CAAK5E,UAAU,eACb2E,EAAW7C,KAAI,SAACmB,GAChB,OACC,kBAAC4B,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGhF,UAAU,OAAOgC,IAAKiB,EAAM5E,IACrD,kBAAC,EAAD,CACC4E,MAAOA,U,gBC2ICgC,EA1IF,WAWZ,IAAM5D,EAAWC,cAXC,EAoBdC,aAAY,qBAAG3C,WALlBT,EAfiB,EAejBA,OACAC,EAhBiB,EAgBjBA,YACAM,EAjBiB,EAiBjBA,YACAF,EAlBiB,EAkBjBA,yBACAD,EAnBiB,EAmBjBA,kBAEK2G,EAAU3D,aAAY,qBAAGnC,OAAoBF,YASnDiG,qBAAU,WAETC,MAAM,GAAD,OACDzE,EADC,kCACgCC,EADhC,oBACqDzC,EADrD,iBACoEO,EADpE,wBAC+FH,EAD/F,iCACyIC,IAE5I6G,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAENnE,GAAmBmE,EAAKtG,SCrDW,CACtCH,KAAM,aACNC,SAAS,KDoDNqC,EC3DkC,CACrCtC,KAAM,aACNC,QDyDsBwG,EAAKC,UACxBpE,ELjDqC,CACxCtC,KAAM,kBACNC,QK+C0BwG,EAAKE,iBAI9BN,MAAM,GAAD,OAAIzE,EAAJ,oCAAuCC,IAC1CyE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAUnE,EL7CuB,CACzCtC,KAAM,mBACNC,QK2C0CwG,EAAKG,cAE5C,CAACxH,EAAQO,EAAaF,EAA0BD,EAAmBH,EAAaiD,IAiDnF,OACC,kBAACuE,EAAA,EAAD,KACC,kBAAChB,EAAA,EAAD,CAAK5E,UAAU,QACd,kBAAC6E,EAAA,EAAD,CAAKC,GAAI,GAAIe,GAAI,GAAId,GAAI,EAAGC,GAAI,GAC/B,kBAAC,EAAD,CAQC7D,eAAgB,SAAC2E,GAAD,OApBG7E,EAoBmB6E,EAAEC,OAAO9E,WAnBnDI,EL9GuB,SAACJ,GAAD,MAAY,CACpClC,KAAM,cAENC,QAASiC,GK2GC+E,CAAU/E,IADG,IAACA,GAqBnBG,aAAc,SAAC0E,GAAD,OAjBG7E,EAiBiB6E,EAAEC,OAAO9E,WAhB/CI,ELnFyC,SAACJ,GAAD,MAAY,CACtDlC,KAAM,mCACNC,QAASiC,GKiFCgF,CAA4BhF,IADjB,IAACA,MAuBnB,kBAAC4D,EAAA,EAAD,CACC7E,UAAU,mDACV8E,GAAI,GACJe,GAAI,GACJd,GAAI,EACJC,GAAI,GACHE,EACA,kBAACgB,EAAA,EAAD,CAASC,UAAU,SAAS/D,QAAQ,SAEpC,kBAAC,EAAD,U,wBElCSgE,EAnGG,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAMpBlB,qBAAU,WACTC,MAAM,GAAD,OAAIzE,EAAJ,iBAAoB0F,EAApB,oBAAuCzF,IAC1CyE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAUc,EAASd,MAE1BJ,MAAM,GAAD,OAAIzE,EAAJ,iBAAoB0F,EAApB,2BAA8CzF,IACjDyE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAUe,EAAgBf,EAAKC,QAAQ,GAAGzD,UAC/C,CAACqE,IAd8B,MAgBOG,mBAAS,IAhBhB,mBAgB3BC,EAhB2B,KAgBZF,EAhBY,OAiBRC,mBAAS,IAjBD,mBAiB3BvD,EAjB2B,KAiBpBqD,EAjBoB,KAmBlC,OACC,kBAACV,EAAA,EAAD,KACC,kBAAChB,EAAA,EAAD,CAAK5E,UAAU,mBACd,kBAAC6E,EAAA,EAAD,CAAKC,GAAI,GAAIe,GAAI,GAAId,GAAI,EAAGC,GAAI,GAC/B,kBAAC,EAAD,CACChF,UAAU,kBACVF,IAAG,yCAAoCmD,EAAMU,aAC7C5D,IAAI,cAGN,kBAAC8E,EAAA,EAAD,CAAKC,GAAI,GAAIe,GAAI,GAAId,GAAI,EAAGC,GAAI,GAC/B,4BAAK/B,EAAMY,OACX,yBAAK7D,UAAU,UACd,yBAAKA,UAAU,0BAA0BsD,MAAO,CAAErD,MAAO,GAAIC,OAAQ,KACpE,kBAAC,IAAD,CACCF,UAAU,GACV8D,YAAU,EACVC,kBAAmB,EACnB9C,MAA4B,GAArBgC,EAAMe,aACbC,KAAI,UAA0B,GAArBhB,EAAMe,aAAX,KACJE,YAAa,EACbC,OAAQC,YAAY,CACnBC,gBAAiB,UACjBC,UAAW,UAEXC,UAAW,UACXC,WAAY,QAIf,yBAAKxE,UAAU,6BACd,kBAAC,EAAD,CAAYA,UAAU,GAAGiD,MAAOA,MAGlC,2BAAIA,EAAMyD,YAGZ,6BACC,kBAACC,EAAA,EAAD,CAAMC,iBAAiB,UAAUvI,GAAG,4BACnC,kBAACwI,EAAA,EAAD,CAAKC,SAAS,OAAOjD,MAAM,WAC1B,6BACC,mDACCZ,EAAM8D,cAER,6BACC,qDACC9D,EAAM+D,oBAGT,kBAACH,EAAA,EAAD,CAAKC,SAAS,UAAUjD,MAAM,WAC5B4C,EACA,4BACCzG,UAAU,GACV6D,MAAO4C,EACP3G,IAAG,wCAAmC2G,KAEvC,IAGF,kBAACI,EAAA,EAAD,CAAKC,SAAS,UAAUjD,MAAM,WAC7B,6BACEZ,EACA,oCACC,kBAAC,EAAD,CACCjD,UAAU,GACVF,IAAG,yCAAoCmD,EAAMgE,eAC7ClH,IAAI,SAIN,SC1EOmH,G,MAlBH,WACX,OACC,oCACC,kBAAC,EAAD,MAGA,kBAAC,IAAD,CAAOC,KAAK,eAAeC,UAAWnC,EAAMoC,OAAK,IAEjD,kBAAC,IAAD,CACCF,KAAK,wBACLG,OAAQ,YAAgB,IACfjJ,EADc,EAAZkJ,MACWC,OAAbnJ,GACR,OAAO,kBAAC,EAAD,CAAWgI,QAAShI,UCdhCoJ,IAASH,OACR,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAU3H,MAAOA,GAChB,kBAAC,EAAD,QAGF+H,SAASC,eAAe,W","file":"static/js/main.c45e8b1b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.02a9430b.svg\";","module.exports = __webpack_public_path__ + \"static/media/no_foto.fcfc35e0.jpg\";","const initialState = {\r\n\tsortBy: 'popularity.desc',\r\n\tmoviesGenre: [\r\n\t\t{ id: 28, name: 'Action' },\r\n\t\t{ id: 12, name: 'Adventure' },\r\n\t\t{ id: 16, name: 'Animation' },\r\n\t\t{ id: 35, name: 'Comedy' },\r\n\t\t{ id: 80, name: 'Crime' },\r\n\t\t{ id: 99, name: 'Documentary' },\r\n\t\t{ id: 18, name: 'Drama' },\r\n\t\t{ id: 10751, name: 'Family' },\r\n\t],\r\n\tmoviesGenreActive: [],\r\n\tsortByPrimaryReleaseYear: null,\r\n\tmoviesWillWatch: [583083],\r\n\tcurrentPage: 1,\r\n\ttotalPages: 0,\r\n};\r\n\r\nconst filters = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'SET_SORT_BY':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsortBy: action.payload,\r\n\t\t\t};\r\n\t\tcase 'SET_MOVIES_WILLWATCH':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmoviesWillWatch: action.payload,\r\n\t\t\t};\r\n\t\tcase 'SET_TOTAL_PAGES':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttotalPages: action.payload,\r\n\t\t\t};\r\n\t\tcase 'SET_CURRENT_PAGE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentPage: action.payload,\r\n\t\t\t};\r\n\t\tcase 'SET_MOVIES_GENRE_ACTIVE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmoviesGenreActive: action.payload,\r\n\t\t\t};\r\n\t\tcase 'SET_SORT_BY_PRIMARY_RELEASE_YEAR':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsortByPrimaryReleaseYear: action.payload,\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default filters;\r\n","const initialState = {\r\n\titems: [],\r\n\tisLoaded: true,\r\n\tselectedMovieObj: {},\r\n};\r\n\r\nconst movies = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'SET_MOVIES':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\titems: action.payload,\r\n\t\t\t\tisLoaded: false,\r\n\t\t\t};\r\n\r\n\t\tcase 'SET_LOADED':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoaded: action.payload,\r\n\t\t\t};\r\n\r\n\t\tcase 'SET_SELECTED_MOVIE_OBJ':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tselectedMovieObj: action.payload,\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default movies;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport filters from './filters';\r\nimport movies from './movies';\r\n\r\nconst rootReducer = combineReducers({\r\n\tfilters,\r\n\tmovies,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, compose } from 'redux';\r\nimport rootReducer from '../reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers());\r\n\r\nexport default store;\r\n","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './Image.css';\r\n\r\nconst Image = ({ src, alt, className, width, height, circle, ...attrs }) => {\r\n\tconst classes = classNames(className, { circle });\r\n\r\n\t// if (!src) {\r\n\t// \tsrc = `https://via.placeholder.com/${width}x${height}`;\r\n\t// }\r\n\r\n\treturn <img src={src} alt={alt} className={classes} width={width} height={height} {...attrs} />;\r\n};\r\n\r\n// Image.propTypes = {\r\n// \tsrc: PropTypes.string,\r\n// \talt: PropTypes.string,\r\n// \twidth: PropTypes.number,\r\n// \theight: PropTypes.number,\r\n// \tcircle: PropTypes.bool,\r\n// \tclassName: PropTypes.string,\r\n// };\r\n\r\n// Image.defaultProps = {\r\n// \tsrc: '',\r\n// \talt: 'image',\r\n// \twidth: '',\r\n// \theight: '',\r\n// \tcircle: false,\r\n// \tclassName: '',\r\n// };\r\n\r\nexport default Image;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar } from 'react-bootstrap';\r\n\r\nimport Image from './image/Image';\r\n// import Button from '../button/Button';\r\n// import Input from '../input/Input';\r\n\r\nimport logo from '../assets/images/logo.svg';\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<div className=\"header d-flex align-items-center\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<Navbar className=\"navbar d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t{/* <div>лого</div> */}\r\n\t\t\t\t\t<Link className=\"navbar-item d-flex\" to=\"/movie-base/\">\r\n\t\t\t\t\t\t<Image src={logo} alt=\"logo\" width={80} height={80} />\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t{/* <div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t<Input type=\"text\" placeholder=\"поиск\" id={'1'}></Input>\r\n\t\t\t\t\t\t<div>Логин пользователя</div>\r\n\t\t\t\t\t\t<Button>Войти</Button>\r\n\t\t\t\t\t</div> */}\r\n\t\t\t\t</Navbar>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","export const API_URL = \"https://api.themoviedb.org/3/\";\r\n\r\nexport const API_KEY_3 = \"e087dbd99b6b5cf5949d0943b02906a5\";\r\n\r\n// ключ жени 3f4ca4f3a9750da53450646ced312397\r\n// export const API_KEY_4 = \"https://api.themoviedb.org/3/\";\r\n","export const setSortBy = (value) => ({\r\n\ttype: 'SET_SORT_BY',\r\n\t// payload: 'popularity.desc',\r\n\tpayload: value,\r\n});\r\n\r\nexport const setMoviesWillWatch = (movies) => ({\r\n\ttype: 'SET_MOVIES_WILLWATCH',\r\n\tpayload: movies,\r\n});\r\n\r\nexport const setTotalPages = (pages) => ({\r\n\ttype: 'SET_TOTAL_PAGES',\r\n\tpayload: pages,\r\n});\r\n\r\nexport const setCurrentPage = (page) => ({\r\n\ttype: 'SET_CURRENT_PAGE',\r\n\tpayload: page,\r\n});\r\n\r\nexport const setMoviesGenre = (value) => ({\r\n\ttype: 'SET_MOVIES_GENRE',\r\n\tpayload: value,\r\n});\r\n\r\nexport const setMoviesGenreActive = (value) => ({\r\n\ttype: 'SET_MOVIES_GENRE_ACTIVE',\r\n\tpayload: value,\r\n});\r\n\r\nexport const setSortByPrimaryReleaseYear = (value) => ({\r\n\ttype: 'SET_SORT_BY_PRIMARY_RELEASE_YEAR',\r\n\tpayload: value,\r\n});\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { Form, Button } from 'react-bootstrap';\r\n// import Pagination from 'react-bootstrap/Pagination';\r\n\r\nimport {\r\n\t// setSortBy,\r\n\t// setTotalPages,\r\n\tsetCurrentPage,\r\n\t// setMoviesGenre,\r\n\tsetMoviesGenreActive,\r\n\t// setSortByPrimaryReleaseYear,\r\n} from '../redux/actions/filters';\r\n// import PropTypes from 'prop-types';\r\n// import classNames from 'classnames'\r\n\r\nconst Sidebar = ({\r\n\t// moviesWillWatch,\r\n\t// moviesGenre,\r\n\t// moviesGenreActive,\r\n\t// currentPage,\r\n\t// totalPages,\r\n\t// addMoviesGenre,\r\n\t// removeMoviesGenre,\r\n\tonChangeSortBy,\r\n\tonChangeYear,\r\n\t// paginationIncrease,\r\n\t// paginationDecrease,\r\n}) => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst { moviesGenre, moviesGenreActive, totalPages, currentPage } = useSelector(\r\n\t\t({ filters }) => filters,\r\n\t);\r\n\tconst arrSortBy = [\r\n\t\t{ id: 'popularity.desc', name: 'Popularity ↓' },\r\n\t\t{ id: 'popularity.asc', name: 'Popularity ↑' },\r\n\t\t{ id: 'release_date.desc', name: 'Release Date ↓' },\r\n\t\t{ id: 'release_date.asc', name: 'Release Date ↑' },\r\n\t\t{ id: 'vote_average.desc', name: 'Vote ↓' },\r\n\t\t{ id: 'vote_average.asc', name: 'Vote ↑' },\r\n\t\t{ id: 'original_title.asc', name: 'Title A-Z' },\r\n\t\t{ id: 'original_title.desc', name: 'Title Z-A' },\r\n\t];\r\n\r\n\tconst generateMoviesYearRelease = () => {\r\n\t\tlet years = [];\r\n\t\tfor (let index = new Date().getFullYear(); index > 1970; index--) {\r\n\t\t\tyears.push(index);\r\n\t\t}\r\n\t\treturn years;\r\n\t};\r\n\tconst generateYears = generateMoviesYearRelease();\r\n\r\n\tconst years = generateYears.map((item) => (\r\n\t\t<option key={item} value={item}>\r\n\t\t\t{item}\r\n\t\t</option>\r\n\t));\r\n\r\n\tconst addMoviesGenre = (id) => {\r\n\t\tconst updateCurrentGenre = [...moviesGenreActive, id];\r\n\t\tdispatch(setMoviesGenreActive(updateCurrentGenre));\r\n\t\tdispatch(setCurrentPage(1));\r\n\t};\r\n\r\n\tconst removeMoviesGenre = (id) => {\r\n\t\tconst updateCurrentGenre = moviesGenreActive.filter((item) => item !== id);\r\n\t\tdispatch(setMoviesGenreActive(updateCurrentGenre));\r\n\t};\r\n\r\n\tconst paginationIncrease = () => {\r\n\t\tconst updateCurrentPage = currentPage + 1;\r\n\t\tdispatch(setCurrentPage(updateCurrentPage));\r\n\t};\r\n\r\n\tconst paginationDecrease = () => {\r\n\t\tif (currentPage >= 2) {\r\n\t\t\tconst updateCurrentPage = currentPage - 1;\r\n\t\t\tdispatch(setCurrentPage(updateCurrentPage));\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Form className=\"sidebar mb-2 p-2\">\r\n\t\t\t<h3 className=\"sidebar-top\">Filters</h3>\r\n\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t<Form.Label>Sort By:</Form.Label>\r\n\t\t\t\t<Form.Control variant=\"info\" as=\"select\" onChange={onChangeSortBy}>\r\n\t\t\t\t\t{arrSortBy.map((item) => (\r\n\t\t\t\t\t\t<option key={item.name} value={item.id}>\r\n\t\t\t\t\t\t\t{item.name}\r\n\t\t\t\t\t\t</option>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Form.Control>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t<Form.Label className=\"\">Release Year:</Form.Label>\r\n\t\t\t\t<Form.Control as=\"select\" onChange={onChangeYear}>\r\n\t\t\t\t\t<option>Сhoose year:</option>\r\n\t\t\t\t\t{years}\r\n\t\t\t\t</Form.Control>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t<Form.Label>Сhoose genre:</Form.Label>\r\n\t\t\t\t<div className=\"d-flex\">\r\n\t\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t\t{moviesGenre.map(({ name, id }) => {\r\n\t\t\t\t\t\t\tconst isActive = moviesGenreActive.indexOf(id) !== -1;\r\n\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tkey={id}\r\n\t\t\t\t\t\t\t\t\tclassName={isActive ? 'active' : ''}\r\n\t\t\t\t\t\t\t\t\tvariant=\"outline-info\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => (isActive ? removeMoviesGenre(id) : addMoviesGenre(id))}>\r\n\t\t\t\t\t\t\t\t\t{name}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* <Button variant=\"primary\">Clear filter</Button> */}\r\n\r\n\t\t\t<div className=\"pagination btn-group d-flex align-items-center\">\r\n\t\t\t\t<Button\r\n\t\t\t\t\tdisabled={currentPage === 1}\r\n\t\t\t\t\tclassName=\"pagination__button\"\r\n\t\t\t\t\tvariant=\"info\"\r\n\t\t\t\t\tonClick={() => paginationDecrease()}>\r\n\t\t\t\t\tBack\r\n\t\t\t\t</Button>\r\n\r\n\t\t\t\t<div className=\"pagination__pages p-2\">\r\n\t\t\t\t\t{totalPages ? `${currentPage} из ${totalPages}` : ''}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<Button\r\n\t\t\t\t\tclassName=\"pagination__button\"\r\n\t\t\t\t\tvariant=\"info\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tpaginationIncrease();\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\tForward\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t\t{/* <Pagination>\r\n\t\t\t\t\t<Pagination.Prev onClick={() => paginationDecrease()} />\r\n\t\t\t\t\t<Pagination.Item active>{currentPage}</Pagination.Item>\r\n\t\t\t\t\t<Pagination.Item onClick={() => dispatch(setCurrentPage(currentPage + 1))}>\r\n\t\t\t\t\t\t{currentPage + 1}\r\n\t\t\t\t\t</Pagination.Item>\r\n\t\t\t\t\t<Pagination.Item onClick={() => dispatch(setCurrentPage(currentPage + 2))}>\r\n\t\t\t\t\t\t{currentPage + 2}\r\n\t\t\t\t\t</Pagination.Item>\r\n\t\t\t\t\t<Pagination.Ellipsis />\r\n\t\t\t\t\t<Pagination.Item onClick={() => dispatch(setCurrentPage(currentPage + 10))}>\r\n\t\t\t\t\t\t{currentPage + 10}\r\n\t\t\t\t\t</Pagination.Item>\r\n\t\t\t\t\t<Pagination.Next\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tpaginationIncrease();\r\n\t\t\t\t\t\t}}></Pagination.Next>\r\n\t\t\t\t</Pagination> */}\r\n\t\t</Form>\r\n\t);\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport FontAwesome from 'react-fontawesome';\r\n\r\nimport { setMoviesWillWatch } from '../redux/actions/filters';\r\n\r\n// const like =\r\n// );\r\n\r\nconst LikeButton = ({ movie }) => {\r\n\tconst dispatch = useDispatch();\r\n\t// const [willWatch, setWillWatch] = useState(false);\r\n\tconst moviesWillWatch = useSelector(({ filters }) => filters.moviesWillWatch);\r\n\r\n\t// const [willWatch, setWillWatch] = useState(false);\r\n\t// state = {\r\n\t// \twillWatch: false,\r\n\t// };\r\n\r\n\t// const movies = useSelector((state) => state.movies);\r\n\t// const moviesWillWatch = useSelector(({ filters }) => filters.moviesWillWatch);\r\n\r\n\tconst addMovieToWillWatch = (movie) => {\r\n\t\tconst updateMoviesWillWatch = [...moviesWillWatch, movie.id];\r\n\t\tdispatch(setMoviesWillWatch(updateMoviesWillWatch));\r\n\t};\r\n\r\n\tconst removeMovieToWillWatch = (movie) => {\r\n\t\t// console.log(movie);\r\n\t\t// console.log(moviesWillWatch);\r\n\t\t// console.log(updateMoviesWillWatch);\r\n\r\n\t\tconst updateMoviesWillWatch = moviesWillWatch.filter((item) => item !== movie.id);\r\n\t\t// ;\r\n\r\n\t\tdispatch(setMoviesWillWatch(updateMoviesWillWatch));\r\n\t};\r\n\r\n\tconst buttonLike = moviesWillWatch.includes(movie.id) ? (\r\n\t\t<button\r\n\t\t\tclassName=\"like-btn --active\"\r\n\t\t\t// variant=\"danger\"\r\n\t\t\tonClick={() => {\r\n\t\t\t\t// setWillWatch(false);\r\n\t\t\t\t// this.setState({\r\n\t\t\t\t// \twillWatch: ,\r\n\t\t\t\t// });\r\n\t\t\t\tremoveMovieToWillWatch(movie);\r\n\t\t\t}}>\r\n\t\t\t<FontAwesome\r\n\t\t\t\tclassName=\"like-btn__icon\"\r\n\t\t\t\tname=\"heart\"\r\n\t\t\t\t// size=\"2x\"\r\n\t\t\t\tstyle={{ color: 'rgb(27, 105, 217)' }}\r\n\t\t\t/>\r\n\t\t</button>\r\n\t) : (\r\n\t\t<button\r\n\t\t\tclassName=\"like-btn\"\r\n\t\t\t// variant=\"light\"\r\n\t\t\tonClick={() => {\r\n\t\t\t\t// setWillWatch(true);\r\n\t\t\t\t// this.setState({\r\n\t\t\t\t// \twillWatch: ,\r\n\t\t\t\t// });\r\n\t\t\t\taddMovieToWillWatch(movie);\r\n\t\t\t}}>\r\n\t\t\t<FontAwesome\r\n\t\t\t\tclassName=\"like-btn__icon\"\r\n\t\t\t\tname=\"heart\"\r\n\t\t\t\t// size=\"2x\"\r\n\t\t\t\tstyle={{ color: 'rgb(27, 105, 217)' }}\r\n\t\t\t/>\r\n\t\t</button>\r\n\t);\r\n\r\n\treturn <>{buttonLike}</>;\r\n};\r\n\r\nexport default LikeButton;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// import { useDispatch } from 'react-redux';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport LikeButton from './LikeButton';\r\n\r\n// Import react-circular-progressbar module and styles\r\nimport {\r\n\tCircularProgressbar,\r\n\t// CircularProgressbarWithChildren,\r\n\tbuildStyles,\r\n} from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n// Animation\r\n// import { easeQuadInOut } from 'd3-ease';\r\n// import AnimatedProgressProvider from './AnimatedProgressProvider';\r\n// import ChangingProgressProvider from './ChangingProgressProvider';\r\n\r\n// import { setMoviesWillWatch } from '../../redux/actions/filters';\r\n// import { setSelectedMovieObj } from '../redux/actions/movies';\r\n\r\nimport Image from './image/Image';\r\nimport imgNoFotoIdDb from '../assets/images/no_foto.jpg';\r\n\r\nconst MovieItem = ({ movie }) => {\r\n\t// const dispatch = useDispatch();\r\n\t// const [willWatch, setWillWatch] = useState(false);\r\n\t// state = {\r\n\t// \twillWatch: false,\r\n\t// };\r\n\r\n\t// const movies = useSelector((state) => state.movies);\r\n\t// const moviesWillWatch = useSelector(({ filters }) => filters.moviesWillWatch);\r\n\r\n\t// const addMovieToWillWatch = (movie) => {\r\n\t// \tconst updateMoviesWillWatch = [...moviesWillWatch, movie.id];\r\n\t// \tdispatch(setMoviesWillWatch(updateMoviesWillWatch));\r\n\t// };\r\n\r\n\t// const removeMovieToWillWatch = (movie) => {\r\n\t// \tconst updateMoviesWillWatch = moviesWillWatch.filter((item) => item.id !== movie.id);\r\n\t// \t// setMoviesWillWatch(updateMoviesWillWatch);\r\n\t// };\r\n\r\n\t// const moviesWillWatch = useSelector(({ filters }) => filters.moviesWillWatch);\r\n\r\n\t// const  = this.props;\r\n\tconst cardImage = movie.poster_path ? (\r\n\t\t<>\r\n\t\t\t<Image\r\n\t\t\t\tclassName=\"card-img-top\"\r\n\t\t\t\tsrc={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n\t\t\t\talt=\"card-img\"\r\n\t\t\t/>\r\n\t\t</>\r\n\t) : (\r\n\t\t<Image className=\"card-img-top\" src={imgNoFotoIdDb} alt=\"card-img\" />\r\n\t);\r\n\r\n\t// const buttonTrash = (\r\n\t// \t<Button className=\"btn btn-light\" onClick={removeMovie.bind(null, movie)}>\r\n\t// \t\t<FontAwesome className=\"\" name=\"trash\" size=\"1x\" style={{ color: 'rgb(27, 105, 217)' }} />{' '}\r\n\t// \t</Button>\r\n\t// );\r\n\r\n\treturn (\r\n\t\t<div className=\"card\">\r\n\t\t\t<Link to={`/movie-base/movie/${movie.id}`}>{cardImage}</Link>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<h5 className=\"card-title m-2\">{movie.title}</h5>\r\n\r\n\t\t\t\t<div className=\"card__progressbar\" style={{ width: 50, height: 50 }}>\r\n\t\t\t\t\t<CircularProgressbar\r\n\t\t\t\t\t\tclassName=\"\"\r\n\t\t\t\t\t\tbackground\r\n\t\t\t\t\t\tbackgroundPadding={6}\r\n\t\t\t\t\t\tvalue={movie.vote_average * 10}\r\n\t\t\t\t\t\ttext={`${movie.vote_average * 10}%`}\r\n\t\t\t\t\t\tstrokeWidth={9}\r\n\t\t\t\t\t\tstyles={buildStyles({\r\n\t\t\t\t\t\t\tbackgroundColor: '#FFFFFF',\r\n\t\t\t\t\t\t\ttextColor: '#1B69D9',\r\n\t\t\t\t\t\t\t// textSize: '25',\r\n\t\t\t\t\t\t\tpathColor: '#1B69D9',\r\n\t\t\t\t\t\t\ttrailColor: '',\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"card__like-btn\">\r\n\t\t\t\t\t<LikeButton movie={movie} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MovieItem;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// import PropTypes from 'prop-types';\r\nimport { Col, Row } from 'react-bootstrap';\r\n\r\nimport MovieItem from './MovieItem';\r\n\r\n// import { setMoviesWillWatch } from '../../redux/actions/filters';\r\n\r\n// import MovieTabs from './MovieTabs'\r\nconst MoviesList = ({ removeMovie }) => {\r\n\tconst movieItems = useSelector(({ movies }) => movies.items);\r\n\treturn (\r\n\t\t<Row className=\"movies-list\">\r\n\t\t\t{movieItems.map((movie) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Col xs={6} md={6} lg={4} className=\"mb-4\" key={movie.id}>\r\n\t\t\t\t\t\t<MovieItem\r\n\t\t\t\t\t\t\tmovie={movie}\r\n\t\t\t\t\t\t\t// removeMovie={removeMovie}\r\n\t\t\t\t\t\t\t// moviesWillWatch={moviesWillWatch}\r\n\t\t\t\t\t\t\t// addMovieToWillWatch={addMovieToWillWatch}\r\n\t\t\t\t\t\t\t// removeMovieToWillWatch={removeMovieToWillWatch}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</Row>\r\n\t);\r\n};\r\nexport default MoviesList;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { API_URL, API_KEY_3 } from '../utils/api';\r\n\r\nimport Sidebar from '../Components/Sidebar';\r\nimport MoviesList from '../Components/MoviesList';\r\n\r\nimport { Col, Row, Container } from 'react-bootstrap';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nimport {\r\n\tsetSortBy,\r\n\tsetTotalPages,\r\n\tsetMoviesGenre,\r\n\tsetSortByPrimaryReleaseYear,\r\n\t// setMoviesGenreActive,\r\n} from '../redux/actions/filters';\r\nimport { setMovies, setLoaded } from '../redux/actions/movies';\r\n\r\nconst Home = () => {\r\n\t// state = {\r\n\t// \tmovies: [],\r\n\t// \tmoviesGenre: [],\r\n\t// \tmoviesGenreActive: [],\r\n\t// \tmoviesWillWatch: [],\r\n\t// \tsort_by: 'popularity.desc',\r\n\t// \tsortByPrimaryReleaseYear: null,\r\n\t// \tcurrentPage: 1,\r\n\t// \ttotalPages: null,\r\n\t// };\r\n\tconst dispatch = useDispatch();\r\n\t// const [movies, setMovies] = React.useState([]);\r\n\t// const movies = useSelector((state) => state.movies);\r\n\tconst {\r\n\t\tsortBy,\r\n\t\tmoviesGenre,\r\n\t\tcurrentPage,\r\n\t\tsortByPrimaryReleaseYear,\r\n\t\tmoviesGenreActive,\r\n\t} = useSelector(({ filters }) => filters);\r\n\tconst loading = useSelector(({ movies }) => movies.isLoaded);\r\n\t// const [sortBy, setSortBy] = React.useState('popularity.desc');\r\n\t// const [moviesGenre, setMoviesGenre] = React.useState([]);\r\n\t// const [moviesWillWatch, setMoviesWillWatch] = React.useState([]);\r\n\t// const [totalPages, setTotalPages] = React.useState(null);\r\n\t// const [currentPage, setCurrentPage] = React.useState(1);\r\n\t// const [sortByPrimaryReleaseYear, setSortByPrimaryReleaseYear] = React.useState([]);\r\n\t// const [moviesGenreActive, setMoviesGenreActive] = React.useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\t// getMovie();\r\n\t\tfetch(\r\n\t\t\t`${API_URL}discover/movie?api_key=${API_KEY_3}&sort_by=${sortBy}&page=${currentPage}&with_genres=${moviesGenreActive}&primary_release_year=${sortByPrimaryReleaseYear}`,\r\n\t\t)\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((data) => {\r\n\t\t\t\t// console.log(data.results);\r\n\t\t\t\tdispatch(setLoaded(data.isLoaded));\r\n\t\t\t\tdispatch(setMovies(data.results));\r\n\t\t\t\tdispatch(setTotalPages(data.total_pages));\r\n\t\t\t\t// setTotalPages(data.total_pages);\r\n\t\t\t});\r\n\t\t// getMovieGenre();\r\n\t\tfetch(`${API_URL}genre/movie/list?api_key=${API_KEY_3}`)\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((data) => dispatch(setMoviesGenre(data.genres)));\r\n\t\t// .then((data) => console.log(data.genres));\r\n\t}, [sortBy, currentPage, sortByPrimaryReleaseYear, moviesGenreActive, moviesGenre, dispatch]);\r\n\r\n\t// componentDidMount() {\r\n\t// \tgetMovie();\r\n\t// \tgetMovieGenre();\r\n\t// }\r\n\r\n\t// componentDidUpdate(prevState) {\r\n\t// \tif (\r\n\t// \t\tprevState.sort_by !== this.state.sort_by ||\r\n\t// \t\tprevState.currentPage !== this.state.currentPage ||\r\n\t// \t\tprevState.moviesGenreActive !== this.state.moviesGenreActive ||\r\n\t// \t\tprevState.sortByPrimaryReleaseYear !== this.state.sortByPrimaryReleaseYear\r\n\t// \t) {\r\n\t// \t\tthis.getMovie();\r\n\t// \t\tthis.getMovieGenre();\r\n\t// \t}\r\n\t// }\r\n\r\n\t// const getMovie = () => {\r\n\t// \tfetch(\r\n\t// \t\t`${API_URL}discover/movie?api_key=${API_KEY_3}&sort_by=${sortBy}&page=${currentPage}&with_genres=${moviesGenreActive}&primary_release_year=${sortByPrimaryReleaseYear}`,\r\n\t// \t)\r\n\t// \t\t.then((response) => response.json())\r\n\t// \t\t.then((data) => {\r\n\t// \t\t\tsetMovies(data.results);\r\n\t// \t\t\tsetTotalPages(data.total_pages);\r\n\t// \t\t});\r\n\t// };\r\n\r\n\t// const getMovieGenre = () => {\r\n\t// \tfetch(`${API_URL}genre/movie/list?api_key=${API_KEY_3}`)\r\n\t// \t\t.then((response) => response.json())\r\n\t// \t\t.then((data) => setMoviesGenre(data.genres));\r\n\t// };\r\n\r\n\t// const removeMovie = (movie) => {\r\n\t// \tconst updateMovies = movies.filter((item) => item.id !== movie.id);\r\n\t// \tsetMovies(updateMovies);\r\n\t// };\r\n\r\n\tconst onChangeSortBy = (value) => {\r\n\t\tdispatch(setSortBy(value));\r\n\t};\r\n\r\n\tconst onChangeYear = (value) => {\r\n\t\tdispatch(setSortByPrimaryReleaseYear(value));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Row className=\"mt-2\">\r\n\t\t\t\t<Col xs={12} sm={12} md={3} lg={3}>\r\n\t\t\t\t\t<Sidebar\r\n\t\t\t\t\t\t// currentPage={currentPage}\r\n\t\t\t\t\t\t// totalPages={totalPages}\r\n\t\t\t\t\t\t// moviesWillWatch={moviesWillWatch}\r\n\t\t\t\t\t\t// moviesGenre={moviesGenre}\r\n\t\t\t\t\t\t// moviesGenreActive={moviesGenreActive}\r\n\t\t\t\t\t\t// addMoviesGenre={addMoviesGenre}\r\n\t\t\t\t\t\t// removeMoviesGenre={removeMoviesGenre}\r\n\t\t\t\t\t\tonChangeSortBy={(e) => onChangeSortBy(e.target.value)}\r\n\t\t\t\t\t\tonChangeYear={(e) => onChangeYear(e.target.value)}\r\n\t\t\t\t\t\t// paginationIncrease={paginationIncrease}\r\n\t\t\t\t\t\t// paginationDecrease={paginationDecrease}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t\t<Col\r\n\t\t\t\t\tclassName=\"d-flex justify-content-center align-items-center\"\r\n\t\t\t\t\txs={12}\r\n\t\t\t\t\tsm={12}\r\n\t\t\t\t\tmd={9}\r\n\t\t\t\t\tlg={9}>\r\n\t\t\t\t\t{loading ? (\r\n\t\t\t\t\t\t<Spinner animation=\"border\" variant=\"info\" />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<MoviesList\r\n\t\t\t\t\t\t// movies={movies}\r\n\t\t\t\t\t\t// removeMovie={removeMovie}\r\n\t\t\t\t\t\t// addMovieToWillWatch={addMovieToWillWatch}\r\n\t\t\t\t\t\t// removeMovieToWillWatch={removeMovieToWillWatch}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","export const setMovies = (movies) => ({\r\n\ttype: 'SET_MOVIES',\r\n\tpayload: movies,\r\n});\r\n\r\nexport const setLoaded = (payload) => ({\r\n\ttype: 'SET_LOADED',\r\n\tpayload: false,\r\n});\r\n\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { API_URL, API_KEY_3 } from '../utils/api';\r\n\r\nimport { Col, Row, Container, Tabs, Tab } from 'react-bootstrap';\r\n\r\nimport Image from '../Components/image/Image';\r\nimport LikeButton from '../Components/LikeButton';\r\n\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nconst MoviePage = ({ movieId }) => {\r\n\t// const [moviePosters, setMoviePoster1] = useState('');\r\n\t// console.log(movie.poster_path);\r\n\t// console.log(movie.backdrop_path);\r\n\t// console.log(`https://image.tmdb.org/t/p/w500${movie.backdrop_path}`);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch(`${API_URL}movie/${movieId}?api_key=${API_KEY_3}`)\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((data) => setMovie(data));\r\n\r\n\t\tfetch(`${API_URL}movie/${movieId}/videos?api_key=${API_KEY_3}`)\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((data) => setMovieTrailer(data.results[0].key));\r\n\t}, [movieId]);\r\n\r\n\tconst [movieTrailers, setMovieTrailer] = useState('');\r\n\tconst [movie, setMovie] = useState({});\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Row className=\"movie-page mt-2\">\r\n\t\t\t\t<Col xs={12} sm={12} md={3} lg={3}>\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tclassName=\"movie-page__img\"\r\n\t\t\t\t\t\tsrc={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n\t\t\t\t\t\talt=\"card-img\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={12} sm={12} md={9} lg={9}>\r\n\t\t\t\t\t<h2>{movie.title}</h2>\r\n\t\t\t\t\t<div className=\"d-flex\">\r\n\t\t\t\t\t\t<div className=\"movie-page__progressbar\" style={{ width: 50, height: 50 }}>\r\n\t\t\t\t\t\t\t<CircularProgressbar\r\n\t\t\t\t\t\t\t\tclassName=\"\"\r\n\t\t\t\t\t\t\t\tbackground\r\n\t\t\t\t\t\t\t\tbackgroundPadding={6}\r\n\t\t\t\t\t\t\t\tvalue={movie.vote_average * 10}\r\n\t\t\t\t\t\t\t\ttext={`${movie.vote_average * 10}%`}\r\n\t\t\t\t\t\t\t\tstrokeWidth={9}\r\n\t\t\t\t\t\t\t\tstyles={buildStyles({\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: '#FFFFFF',\r\n\t\t\t\t\t\t\t\t\ttextColor: '#1B69D9',\r\n\t\t\t\t\t\t\t\t\t// textSize: '25',\r\n\t\t\t\t\t\t\t\t\tpathColor: '#1B69D9',\r\n\t\t\t\t\t\t\t\t\ttrailColor: '',\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t\t<LikeButton className=\"\" movie={movie} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p>{movie.overview}</p>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<div>\r\n\t\t\t\t<Tabs defaultActiveKey=\"trailer\" id=\"uncontrolled-tab-example\">\r\n\t\t\t\t\t<Tab eventKey=\"home\" title=\"Details\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span>Date of release: </span>\r\n\t\t\t\t\t\t\t{movie.release_date}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span>Original language: </span>\r\n\t\t\t\t\t\t\t{movie.original_language}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Tab>\r\n\t\t\t\t\t<Tab eventKey=\"trailer\" title=\"Trailer\">\r\n\t\t\t\t\t\t{movieTrailers ? (\r\n\t\t\t\t\t\t\t<iframe\r\n\t\t\t\t\t\t\t\tclassName=\"\"\r\n\t\t\t\t\t\t\t\ttitle={movieTrailers}\r\n\t\t\t\t\t\t\t\tsrc={`https://www.youtube.com/embed/${movieTrailers}`}></iframe>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Tab>\r\n\t\t\t\t\t<Tab eventKey=\"posters\" title=\"Posters\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{movie ? (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"\"\r\n\t\t\t\t\t\t\t\t\t\tsrc={`https://image.tmdb.org/t/p/w500${movie.backdrop_path}`}\r\n\t\t\t\t\t\t\t\t\t\talt=\"img\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t''\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Tab>\r\n\t\t\t\t</Tabs>\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default MoviePage;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport Header from './Header';\r\nimport Home from '../pages/Home';\r\nimport MoviePage from '../pages/MoviePage';\r\n\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Header />\r\n\t\t\t{/* <Home /> */}\r\n\t\t\t{/* <Route path=\"/movie-base/\" render={() => <h2>welcome</h2>} /> */}\r\n\t\t\t<Route path=\"/movie-base/\" component={Home} exact />\r\n\t\t\t{/* <Route path=\"/movie/\" component={MoviePage} exact /> */}\r\n\t\t\t<Route\r\n\t\t\t\tpath=\"/movie-base/movie/:id\"\r\n\t\t\t\trender={({ match }) => {\r\n\t\t\t\t\tconst { id } = match.params;\r\n\t\t\t\t\treturn <MoviePage movieId={id} />;\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store/store';\nimport App from './Components/App';\n\nReactDOM.render(\n\t<Router>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</Router>,\n\tdocument.getElementById('root'),\n);\n"],"sourceRoot":""}