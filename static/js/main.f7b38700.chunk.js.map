{"version":3,"sources":["assets/images/logo.svg","assets/images/no_foto.jpg","redux/reducers/filters.js","redux/reducers/movies.js","redux/reducers/index.js","redux/store/store.js","Components/image/Image.jsx","Components/Header/Header.jsx","utils/api.js","redux/actions/filters.js","Components/Sidebar/Sidebar.jsx","Components/MovieItem/MovieItem.jsx","redux/actions/movies.js","Components/MoviesList/MoviesList.jsx","pages/Home/Home.jsx","Components/Tab1/Tab1.jsx","pages/MoviePage/MoviePage.jsx","Components/App.js","index.js"],"names":["module","exports","initialState","sortBy","moviesGenre","id","name","moviesGenreActive","sortByPrimaryReleaseYear","moviesWillWatch","currentPage","totalPages","filters","state","action","type","payload","items","isLoaded","selectedMovieObj","movies","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","Image","src","alt","className","width","height","circle","attrs","classes","classNames","defaultProps","Header","Navbar","href","logo","API_URL","API_KEY_3","setCurrentPage","page","setMoviesGenreActive","value","Sidebar","onChangeSortBy","onChangeYear","dispatch","useDispatch","useSelector","years","index","Date","getFullYear","push","generateMoviesYearRelease","map","item","key","Form","Label","Control","as","onChange","isActive","indexOf","Button","variant","onClick","updateCurrentGenre","filter","removeMoviesGenre","addMoviesGenre","MovieItem","movie","useState","willWatch","setWillWatch","cardImage","poster_path","imgNoFotoIdDb","buttonLike","removeMovieToWillWatch","size","style","color","updateMoviesWillWatch","addMovieToWillWatch","Row","Col","xs","lg","to","setSelectedMovieObj","title","background","backgroundPadding","vote_average","text","strokeWidth","styles","buildStyles","backgroundColor","textColor","pathColor","trailColor","MoviesList","removeMovie","movieItems","md","Home","useEffect","fetch","then","response","json","data","results","total_pages","genres","Container","sm","e","target","setSortBy","setSortByPrimaryReleaseYear","Tab1","release_date","original_language","MoviePage","console","log","overview","Tabs","defaultActiveKey","Tab","eventKey","App","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7b38700.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.02a9430b.svg\";","module.exports = __webpack_public_path__ + \"static/media/no_foto.fcfc35e0.jpg\";","const initialState = {\r\n\tsortBy: 'popularity.desc',\r\n\tmoviesGenre: [\r\n\t\t{ id: 28, name: 'Action' },\r\n\t\t{ id: 12, name: 'Adventure' },\r\n\t\t{ id: 16, name: 'Animation' },\r\n\t\t{ id: 35, name: 'Comedy' },\r\n\t\t{ id: 80, name: 'Crime' },\r\n\t\t{ id: 99, name: 'Documentary' },\r\n\t\t{ id: 18, name: 'Drama' },\r\n\t\t{ id: 10751, name: 'Family' },\r\n\t],\r\n\tmoviesGenreActive: [],\r\n\tsortByPrimaryReleaseYear: null,\r\n\tmoviesWillWatch: [716333, 578013, 654210],\r\n\tcurrentPage: 1,\r\n\ttotalPages: 0,\r\n};\r\n\r\nconst filters = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'SET_SORT_BY':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsortBy: action.payload,\r\n\t\t\t};\r\n\t\tcase 'SET_MOVIES_WILLWATCH':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmoviesWillWatch: action.payload,\r\n\t\t\t};\r\n\t\tcase 'SET_TOTAL_PAGES':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttotalPages: action.payload,\r\n\t\t\t};\r\n\t\tcase 'SET_CURRENT_PAGE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcurrentPage: action.payload,\r\n\t\t\t};\r\n\t\tcase 'SET_MOVIES_GENRE_ACTIVE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmoviesGenreActive: action.payload,\r\n\t\t\t};\r\n\t\tcase 'SET_SORT_BY_PRIMARY_RELEASE_YEAR':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tsortByPrimaryReleaseYear: action.payload,\r\n\t\t\t};\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default filters;\r\n","const initialState = {\r\n\titems: [],\r\n\tisLoaded: false,\r\n\tselectedMovieObj: {},\r\n};\r\n\r\nconst movies = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'SET_MOVIES':\r\n\t\t\t// console.log(state);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\titems: action.payload,\r\n\t\t\t};\r\n\r\n\t\tcase 'SET_SELECTED_MOVIE_OBJ':\r\n\t\t\t// console.log(state);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tselectedMovieObj: action.payload,\r\n\t\t\t};\r\n\t\t// console.log(state);\r\n\r\n\t\t// case 'INC':\r\n\t\t// \treturn state + 1;\r\n\r\n\t\t// case 'DEC':\r\n\t\t// \treturn state - 1;\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default movies;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport filters from './filters';\r\nimport movies from './movies';\r\n// import cart from './cart';\r\n\r\nconst rootReducer = combineReducers({\r\n\tfilters,\r\n\tmovies,\r\n\t//   cart,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, compose } from 'redux';\r\n// import rootReducer from '../reducers';\r\nimport rootReducer from '../reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers());\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport './Image.css';\r\n\r\nconst Image = ({ src, alt, className, width, height, circle, ...attrs }) => {\r\n\tconst classes = classNames(className, { circle });\r\n\r\n\tif (!src) {\r\n\t\tsrc = `https://via.placeholder.com/${width}x${height}`;\r\n\t}\r\n\r\n\treturn <img src={src} alt={alt} className={classes} width={width} height={height} {...attrs} />;\r\n};\r\n\r\nImage.propTypes = {\r\n\tsrc: PropTypes.string,\r\n\talt: PropTypes.string,\r\n\twidth: PropTypes.number,\r\n\theight: PropTypes.number,\r\n\tcircle: PropTypes.bool,\r\n\tclassName: PropTypes.string,\r\n};\r\n\r\nImage.defaultProps = {\r\n\tsrc: '',\r\n\talt: 'image',\r\n\twidth: '',\r\n\theight: '',\r\n\tcircle: false,\r\n\tclassName: '',\r\n};\r\n\r\nexport default Image;\r\n","import React from 'react';\r\n\r\nimport { Navbar } from 'react-bootstrap';\r\n\r\nimport './Header.css';\r\n\r\nimport Image from '../image/Image';\r\n// import Button from '../button/Button';\r\n// import Input from '../input/Input';\r\n\r\nimport logo from '../../assets/images/logo.svg';\r\n\r\nconst Header = () => {\r\n\treturn (\r\n\t\t<div className=\"header d-flex align-items-center\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<Navbar className=\"navbar d-flex justify-content-between align-items-center\">\r\n\t\t\t\t\t{/* <div>лого</div> */}\r\n\t\t\t\t\t<a className=\"navbar-item d-flex\" href=\"/movie-base/\">\r\n\t\t\t\t\t\t<Image src={logo} alt=\"logo\" width={80} height={80} />\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t{/* <div className=\"d-flex align-items-center\">\r\n\t\t\t\t\t\t<Input type=\"text\" placeholder=\"поиск\" id={'1'}></Input>\r\n\t\t\t\t\t\t<div>Логин пользователя</div>\r\n\t\t\t\t\t\t<Button>Войти</Button>\r\n\t\t\t\t\t</div> */}\r\n\t\t\t\t</Navbar>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","export const API_URL = \"https://api.themoviedb.org/3/\";\r\n\r\nexport const API_KEY_3 = \"e087dbd99b6b5cf5949d0943b02906a5\";\r\n\r\n// ключ жени 3f4ca4f3a9750da53450646ced312397\r\n// export const API_KEY_4 = \"https://api.themoviedb.org/3/\";\r\n","export const setSortBy = (value) => ({\r\n\ttype: 'SET_SORT_BY',\r\n\t// payload: 'popularity.desc',\r\n\tpayload: value,\r\n});\r\n\r\nexport const setMoviesWillWatch = (movies) => ({\r\n\ttype: 'SET_MOVIES_WILLWATCH',\r\n\tpayload: movies,\r\n});\r\n\r\nexport const setTotalPages = (pages) => ({\r\n\ttype: 'SET_TOTAL_PAGES',\r\n\tpayload: pages,\r\n});\r\n\r\nexport const setCurrentPage = (page) => ({\r\n\ttype: 'SET_CURRENT_PAGE',\r\n\tpayload: page,\r\n});\r\n\r\nexport const setMoviesGenre = (value) => ({\r\n\ttype: 'SET_MOVIES_GENRE',\r\n\tpayload: value,\r\n});\r\n\r\nexport const setMoviesGenreActive = (value) => ({\r\n\ttype: 'SET_MOVIES_GENRE_ACTIVE',\r\n\tpayload: value,\r\n});\r\n\r\nexport const setSortByPrimaryReleaseYear = (value) => ({\r\n\ttype: 'SET_SORT_BY_PRIMARY_RELEASE_YEAR',\r\n\tpayload: value,\r\n});\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { Form, Button, Image } from 'react-bootstrap'; //Pagination,\r\n\r\nimport {\r\n\t// setSortBy,\r\n\tsetTotalPages,\r\n\tsetCurrentPage,\r\n\tsetMoviesGenre,\r\n\tsetMoviesGenreActive,\r\n\tsetSortByPrimaryReleaseYear,\r\n} from '../../redux/actions/filters';\r\n// import PropTypes from 'prop-types';\r\n// import classNames from 'classnames'\r\n\r\nconst Sidebar = ({\r\n\t// moviesWillWatch,\r\n\t// moviesGenre,\r\n\t// moviesGenreActive,\r\n\t// currentPage,\r\n\t// totalPages,\r\n\t// addMoviesGenre,\r\n\t// removeMoviesGenre,\r\n\tonChangeSortBy,\r\n\tonChangeYear,\r\n\t// paginationIncrease,\r\n\t// paginationDecrease,\r\n}) => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst { moviesGenre, moviesGenreActive, totalPages, currentPage } = useSelector(\r\n\t\t({ filters }) => filters,\r\n\t);\r\n\tconst arrSortBy = [\r\n\t\t{ id: 'popularity.desc', name: 'Popularity ↓' },\r\n\t\t{ id: 'popularity.asc', name: 'Popularity ↑' },\r\n\t\t{ id: 'release_date.desc', name: 'Release Date ↓' },\r\n\t\t{ id: 'release_date.asc', name: 'Release Date ↑' },\r\n\t\t{ id: 'vote_average.desc', name: 'Vote ↓' },\r\n\t\t{ id: 'vote_average.asc', name: 'Vote ↑' },\r\n\t\t{ id: 'original_title.asc', name: 'Title A-Z' },\r\n\t\t{ id: 'original_title.desc', name: 'Title Z-A' },\r\n\t];\r\n\r\n\tconst generateMoviesYearRelease = () => {\r\n\t\tlet years = [];\r\n\t\tfor (let index = new Date().getFullYear(); index > 1970; index--) {\r\n\t\t\tyears.push(index);\r\n\t\t}\r\n\t\treturn years;\r\n\t};\r\n\tconst generateYears = generateMoviesYearRelease();\r\n\r\n\tconst years = generateYears.map((item) => (\r\n\t\t<option key={item} value={item}>\r\n\t\t\t{item}\r\n\t\t</option>\r\n\t));\r\n\r\n\tconst addMoviesGenre = (id) => {\r\n\t\tconst updateCurrentGenre = [...moviesGenreActive, id];\r\n\t\tdispatch(setMoviesGenreActive(updateCurrentGenre));\r\n\t\tdispatch(setCurrentPage(1));\r\n\t};\r\n\r\n\tconst removeMoviesGenre = (id) => {\r\n\t\tconst updateCurrentGenre = moviesGenreActive.filter((item) => item !== id);\r\n\t\tdispatch(setMoviesGenreActive(updateCurrentGenre));\r\n\t};\r\n\r\n\tconst paginationIncrease = () => {\r\n\t\tconst updateCurrentPage = currentPage + 1;\r\n\t\tdispatch(setCurrentPage(updateCurrentPage));\r\n\t};\r\n\r\n\tconst paginationDecrease = () => {\r\n\t\tif (currentPage >= 2) {\r\n\t\t\tconst updateCurrentPage = currentPage - 1;\r\n\t\t\tdispatch(setCurrentPage(updateCurrentPage));\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"card\">\r\n\t\t\t<Form className=\"p-2\">\r\n\t\t\t\t<h3 className=\"card-top\">Filters</h3>\r\n\t\t\t\t<div className=\"pb-3\">\r\n\t\t\t\t\t<Form.Label>Sort By:</Form.Label>\r\n\t\t\t\t\t<Form.Control as=\"select\" onChange={onChangeSortBy}>\r\n\t\t\t\t\t\t{arrSortBy.map((item) => (\r\n\t\t\t\t\t\t\t<option key={item.name} value={item.id}>\r\n\t\t\t\t\t\t\t\t{item.name}\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Form.Control>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"pb-3\">\r\n\t\t\t\t\t<Form.Label className=\"\">Release Year:</Form.Label>\r\n\t\t\t\t\t<Form.Control as=\"select\" onChange={onChangeYear}>\r\n\t\t\t\t\t\t<option>Сhoose year:</option>\r\n\t\t\t\t\t\t{years}\r\n\t\t\t\t\t</Form.Control>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"pb-3\">\r\n\t\t\t\t\t<Form.Label>Сhoose genre:</Form.Label>\r\n\t\t\t\t\t<div className=\"d-flex\">\r\n\t\t\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t\t\t{moviesGenre.map(({ name, id }) => {\r\n\t\t\t\t\t\t\t\tconst isActive = moviesGenreActive.indexOf(id) !== -1;\r\n\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tkey={id}\r\n\t\t\t\t\t\t\t\t\t\t// outline-primary\r\n\t\t\t\t\t\t\t\t\t\tclassName={isActive ? 'active' : ''}\r\n\t\t\t\t\t\t\t\t\t\tvariant=\"outline-primary\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => (isActive ? removeMoviesGenre(id) : addMoviesGenre(id))}>\r\n\t\t\t\t\t\t\t\t\t\t{name}\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* <Button variant=\"primary\">Clear filter</Button> */}\r\n\r\n\t\t\t\t<div className=\"pagination btn-group d-flex align-items-center pt-1\">\r\n\t\t\t\t\t<Button variant=\"primary\" onClick={() => paginationDecrease()}>\r\n\t\t\t\t\t\tBack\r\n\t\t\t\t\t</Button>\r\n\r\n\t\t\t\t\t<div className=\"p-2\">{`${currentPage} из ${totalPages}`}</div>\r\n\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tpaginationIncrease();\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\tForward\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</Form>\r\n\r\n\t\t\t{/* <div className=\"card\">\r\n\t\t\t\t<div>Will watch: {moviesWillWatch.length}</div>\r\n\t\t\t\t{moviesWillWatch.map((item) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div>{item.title}</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\tclassName=\"card-img\"\r\n\t\t\t\t\t\t\t\tsrc={`https://image.tmdb.org/t/p/w500${item.poster_path}`}\r\n\t\t\t\t\t\t\t\talt=\"card-img\"\r\n\t\t\t\t\t\t\t/>{' '}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</>\r\n\t\t\t\t))}\r\n\t\t\t</div> */}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Row, Col, Button } from 'react-bootstrap';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport Image from '../image/Image';\r\nimport imgNoFotoIdDb from '../../assets/images/no_foto.jpg';\r\n\r\n// Import react-circular-progressbar module and styles\r\nimport {\r\n\tCircularProgressbar,\r\n\t// CircularProgressbarWithChildren,\r\n\tbuildStyles,\r\n} from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\n// Animation\r\n// import { easeQuadInOut } from 'd3-ease';\r\n// import AnimatedProgressProvider from './AnimatedProgressProvider';\r\n// import ChangingProgressProvider from './ChangingProgressProvider';\r\n\r\nimport './MovieItem.css';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { setMoviesWillWatch } from '../../redux/actions/filters';\r\n\r\nimport { setSelectedMovieObj } from '../../redux/actions/movies';\r\n\r\n// import PropTypes from 'prop-types';\r\n\r\nconst MovieItem = ({ movie }) => {\r\n\tconst dispatch = useDispatch();\r\n\tconst [willWatch, setWillWatch] = useState(false);\r\n\t// state = {\r\n\t// \twillWatch: false,\r\n\t// };\r\n\r\n\t// const movies = useSelector((state) => state.movies);\r\n\t// const moviesWillWatch = useSelector(({ filters }) => filters.moviesWillWatch);\r\n\r\n\tconst addMovieToWillWatch = (movie) => {\r\n\t\tconst updateMoviesWillWatch = [...moviesWillWatch, movie.id];\r\n\t\tdispatch(setMoviesWillWatch(updateMoviesWillWatch));\r\n\t};\r\n\r\n\tconst removeMovieToWillWatch = (movie) => {\r\n\t\tconst updateMoviesWillWatch = moviesWillWatch.filter((item) => item.id !== movie.id);\r\n\t\t// setMoviesWillWatch(updateMoviesWillWatch);\r\n\t};\r\n\r\n\tconst moviesWillWatch = useSelector(({ filters }) => filters.moviesWillWatch);\r\n\r\n\t// const  = this.props;\r\n\tconst cardImage = movie.poster_path ? (\r\n\t\t<>\r\n\t\t\t<Image\r\n\t\t\t\tclassName=\"card-img-top\"\r\n\t\t\t\tsrc={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n\t\t\t\talt=\"card-img\"\r\n\t\t\t/>\r\n\t\t</>\r\n\t) : (\r\n\t\t<Image className=\"card-img-top\" src={imgNoFotoIdDb} alt=\"card-img\" />\r\n\t);\r\n\r\n\tconst buttonLike = willWatch ? (\r\n\t\t<button\r\n\t\t\tclassName=\"card-item__like-btn --active\"\r\n\t\t\t// variant=\"danger\"\r\n\t\t\tonClick={() => {\r\n\t\t\t\tsetWillWatch(false);\r\n\t\t\t\t// this.setState({\r\n\t\t\t\t// \twillWatch: ,\r\n\t\t\t\t// });\r\n\t\t\t\tremoveMovieToWillWatch(movie);\r\n\t\t\t}}>\r\n\t\t\t<FontAwesome className=\"\" name=\"heart\" size=\"1x\" style={{ color: 'rgb(27, 105, 217)' }} />\r\n\t\t</button>\r\n\t) : (\r\n\t\t<button\r\n\t\t\tclassName=\"card-item__like-btn\"\r\n\t\t\t// variant=\"light\"\r\n\t\t\tonClick={() => {\r\n\t\t\t\tsetWillWatch(true);\r\n\t\t\t\t// this.setState({\r\n\t\t\t\t// \twillWatch: ,\r\n\t\t\t\t// });\r\n\t\t\t\taddMovieToWillWatch(movie);\r\n\t\t\t}}>\r\n\t\t\t<FontAwesome className=\"\" name=\"heart\" size=\"1x\" style={{ color: 'rgb(27, 105, 217)' }} />\r\n\t\t</button>\r\n\t);\r\n\r\n\t// const buttonTrash = (\r\n\t// \t<Button className=\"btn btn-light\" onClick={removeMovie.bind(null, movie)}>\r\n\t// \t\t<FontAwesome className=\"\" name=\"trash\" size=\"1x\" style={{ color: 'rgb(27, 105, 217)' }} />{' '}\r\n\t// \t</Button>\r\n\t// );\r\n\r\n\treturn (\r\n\t\t<div className=\"card\">\r\n\t\t\t<Row className=\"card-item\">\r\n\t\t\t\t<Col xs={12} lg={12} className=\"\">\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\t\tto={`/movie-base/movie-page/`}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tdispatch(setSelectedMovieObj(movie));\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t{cardImage}\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t{/* <Link className=\"\" to={`/movie/${movie.id}/details`}>\r\n\t\t\t\t\t\tПодробнее\r\n\t\t\t\t\t</Link> */}\r\n\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h5 className=\"card-title pt-2\">{movie.title}</h5>\r\n\r\n\t\t\t\t\t\t<div className=\"card__progressbar\" style={{ width: 50, height: 50 }}>\r\n\t\t\t\t\t\t\t<CircularProgressbar\r\n\t\t\t\t\t\t\t\tclassName=\"CircularProgressbar\"\r\n\t\t\t\t\t\t\t\tbackground\r\n\t\t\t\t\t\t\t\tbackgroundPadding={6}\r\n\t\t\t\t\t\t\t\tvalue={movie.vote_average * 10}\r\n\t\t\t\t\t\t\t\ttext={`${movie.vote_average * 10}%`}\r\n\t\t\t\t\t\t\t\tstrokeWidth={9}\r\n\t\t\t\t\t\t\t\tstyles={buildStyles({\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: '#FFFFFF',\r\n\t\t\t\t\t\t\t\t\ttextColor: '#1B69D9',\r\n\t\t\t\t\t\t\t\t\t// textSize: '25',\r\n\t\t\t\t\t\t\t\t\tpathColor: '#1B69D9',\r\n\t\t\t\t\t\t\t\t\ttrailColor: '',\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{buttonLike}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MovieItem;\r\n","export const setMovies = (movies) => ({\r\n\ttype: 'SET_MOVIES',\r\n\tpayload: movies,\r\n});\r\n\r\nexport const setSelectedMovieObj = (movie) => ({\r\n\ttype: 'SET_SELECTED_MOVIE_OBJ',\r\n\tpayload: movie,\r\n});\r\n\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n// import PropTypes from 'prop-types';\r\nimport { Col, Row } from 'react-bootstrap';\r\n\r\nimport MovieItem from '../MovieItem/MovieItem';\r\n\r\nimport { setMoviesWillWatch } from '../../redux/actions/filters';\r\n\r\n// import MovieTabs from './MovieTabs'\r\nconst MoviesList = ({ removeMovie }) => {\r\n\tconst movieItems = useSelector(({ movies }) => movies.items);\r\n\r\n\t// console.log(movies.items, '1');\r\n\t// console.log(movies, '2');\r\n\t// debugger;\r\n\r\n\treturn (\r\n\t\t<Row className=\"movies-list\">\r\n\t\t\t{movieItems.map((movie) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Col xs={6} md={6} lg={4} className=\"mb-4\" key={movie.id}>\r\n\t\t\t\t\t\t<MovieItem\r\n\t\t\t\t\t\tmovie={movie}\r\n\t\t\t\t\t\t// removeMovie={removeMovie}\r\n\t\t\t\t\t\t// moviesWillWatch={moviesWillWatch}\r\n\t\t\t\t\t\t// addMovieToWillWatch={addMovieToWillWatch}\r\n\t\t\t\t\t\t// removeMovieToWillWatch={removeMovieToWillWatch}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</Row>\r\n\t);\r\n};\r\nexport default MoviesList;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { API_URL, API_KEY_3 } from '../../utils/api';\r\n\r\nimport Sidebar from '../../Components/Sidebar/Sidebar';\r\nimport MoviesList from '../../Components/MoviesList/MoviesList';\r\n\r\nimport { Col, Row, Container } from 'react-bootstrap';\r\n\r\nimport {\r\n\tsetSortBy,\r\n\tsetTotalPages,\r\n\tsetMoviesGenre,\r\n\tsetSortByPrimaryReleaseYear,\r\n\t// setMoviesGenreActive,\r\n} from '../../redux/actions/filters';\r\nimport { setMovies } from '../../redux/actions/movies';\r\n\r\nconst Home = () => {\r\n\t// state = {\r\n\t// \tmovies: [],\r\n\t// \tmoviesGenre: [],\r\n\t// \tmoviesGenreActive: [],\r\n\t// \tmoviesWillWatch: [],\r\n\t// \tsort_by: 'popularity.desc',\r\n\t// \tsortByPrimaryReleaseYear: null,\r\n\t// \tcurrentPage: 1,\r\n\t// \ttotalPages: null,\r\n\t// };\r\n\tconst dispatch = useDispatch();\r\n\t// const [movies, setMovies] = React.useState([]);\r\n\t// const movies = useSelector((state) => state.movies);\r\n\tconst {\r\n\t\tsortBy,\r\n\t\tmoviesGenre,\r\n\t\tcurrentPage,\r\n\t\tsortByPrimaryReleaseYear,\r\n\t\tmoviesGenreActive,\r\n\t} = useSelector(({ filters }) => filters);\r\n\t// const [sortBy, setSortBy] = React.useState('popularity.desc');\r\n\t// const [moviesGenre, setMoviesGenre] = React.useState([]);\r\n\t// const [moviesWillWatch, setMoviesWillWatch] = React.useState([]);\r\n\t// const [totalPages, setTotalPages] = React.useState(null);\r\n\t// const [currentPage, setCurrentPage] = React.useState(1);\r\n\t// const [sortByPrimaryReleaseYear, setSortByPrimaryReleaseYear] = React.useState([]);\r\n\t// const [moviesGenreActive, setMoviesGenreActive] = React.useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\t// getMovie();\r\n\t\tfetch(\r\n\t\t\t`${API_URL}discover/movie?api_key=${API_KEY_3}&sort_by=${sortBy}&page=${currentPage}&with_genres=${moviesGenreActive}&primary_release_year=${sortByPrimaryReleaseYear}`,\r\n\t\t)\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((data) => {\r\n\t\t\t\t// console.log(data.results);\r\n\t\t\t\tdispatch(setMovies(data.results));\r\n\t\t\t\tdispatch(setTotalPages(data.total_pages));\r\n\t\t\t\t// setTotalPages(data.total_pages);\r\n\t\t\t});\r\n\t\t// getMovieGenre();\r\n\t\tfetch(`${API_URL}genre/movie/list?api_key=${API_KEY_3}`)\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((data) => dispatch(setMoviesGenre(data.genres)));\r\n\t\t// .then((data) => console.log(data.genres));\r\n\t}, [sortBy, currentPage, sortByPrimaryReleaseYear, moviesGenreActive, moviesGenre]);\r\n\r\n\t// componentDidMount() {\r\n\t// \tgetMovie();\r\n\t// \tgetMovieGenre();\r\n\t// }\r\n\r\n\t// componentDidUpdate(prevState) {\r\n\t// \tif (\r\n\t// \t\tprevState.sort_by !== this.state.sort_by ||\r\n\t// \t\tprevState.currentPage !== this.state.currentPage ||\r\n\t// \t\tprevState.moviesGenreActive !== this.state.moviesGenreActive ||\r\n\t// \t\tprevState.sortByPrimaryReleaseYear !== this.state.sortByPrimaryReleaseYear\r\n\t// \t) {\r\n\t// \t\tthis.getMovie();\r\n\t// \t\tthis.getMovieGenre();\r\n\t// \t}\r\n\t// }\r\n\r\n\t// const getMovie = () => {\r\n\t// \tfetch(\r\n\t// \t\t`${API_URL}discover/movie?api_key=${API_KEY_3}&sort_by=${sortBy}&page=${currentPage}&with_genres=${moviesGenreActive}&primary_release_year=${sortByPrimaryReleaseYear}`,\r\n\t// \t)\r\n\t// \t\t.then((response) => response.json())\r\n\t// \t\t.then((data) => {\r\n\t// \t\t\tsetMovies(data.results);\r\n\t// \t\t\tsetTotalPages(data.total_pages);\r\n\t// \t\t});\r\n\t// };\r\n\r\n\t// const getMovieGenre = () => {\r\n\t// \tfetch(`${API_URL}genre/movie/list?api_key=${API_KEY_3}`)\r\n\t// \t\t.then((response) => response.json())\r\n\t// \t\t.then((data) => setMoviesGenre(data.genres));\r\n\t// };\r\n\r\n\t// const removeMovie = (movie) => {\r\n\t// \tconst updateMovies = movies.filter((item) => item.id !== movie.id);\r\n\t// \tsetMovies(updateMovies);\r\n\t// };\r\n\r\n\tconst onChangeSortBy = (value) => {\r\n\t\tdispatch(setSortBy(value));\r\n\t};\r\n\r\n\tconst onChangeYear = (value) => {\r\n\t\tdispatch(setSortByPrimaryReleaseYear(value));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t{/* {console.log(this.state.movies)} */}\r\n\t\t\t<Row className=\"pt-2\">\r\n\t\t\t\t<Col xs={12} sm={12} md={3} lg={3}>\r\n\t\t\t\t\t<Sidebar\r\n\t\t\t\t\t\t// currentPage={currentPage}\r\n\t\t\t\t\t\t// totalPages={totalPages}\r\n\t\t\t\t\t\t// moviesWillWatch={moviesWillWatch}\r\n\t\t\t\t\t\t// moviesGenre={moviesGenre}\r\n\t\t\t\t\t\t// moviesGenreActive={moviesGenreActive}\r\n\t\t\t\t\t\t// addMoviesGenre={addMoviesGenre}\r\n\t\t\t\t\t\t// removeMoviesGenre={removeMoviesGenre}\r\n\t\t\t\t\t\tonChangeSortBy={(e) => onChangeSortBy(e.target.value)}\r\n\t\t\t\t\t\tonChangeYear={(e) => onChangeYear(e.target.value)}\r\n\t\t\t\t\t\t// paginationIncrease={paginationIncrease}\r\n\t\t\t\t\t\t// paginationDecrease={paginationDecrease}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\r\n\t\t\t\t<Col xs={12} sm={12} md={9} lg={9}>\r\n\t\t\t\t\t<MoviesList\r\n\t\t\t\t\t// movies={movies}\r\n\t\t\t\t\t// removeMovie={removeMovie}\r\n\t\t\t\t\t// addMovieToWillWatch={addMovieToWillWatch}\r\n\t\t\t\t\t// removeMovieToWillWatch={removeMovieToWillWatch}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst Tab1 = ({ movie }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div>{movie.release_date}</div>\r\n\t\t\t<div>{movie.original_language}</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Tab1;\r\n","import React from 'react';\r\n\r\nimport Tab1 from '../../Components/Tab1/Tab1';\r\nimport Image from '../../Components/image/Image';\r\nimport { Col, Row, Container, Tabs, Tab, Sonnet } from 'react-bootstrap';\r\n\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport './MoviePage.css';\r\n\r\nconst MoviePage = () => {\r\n\tconst movie = useSelector(({ movies }) => movies.selectedMovieObj);\r\n\tconsole.log(movie);\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col xs={12} sm={12} md={3} lg={3}>\r\n\t\t\t\t\t<Image\r\n\t\t\t\t\t\tclassName=\"movie-page__img\"\r\n\t\t\t\t\t\tsrc={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\r\n\t\t\t\t\t\talt=\"card-img\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col xs={12} sm={12} md={9} lg={9}>\r\n\t\t\t\t\t<h2>{movie.title}</h2>\r\n\t\t\t\t\t<div className=\"d-flex\">\r\n\t\t\t\t\t\t<CircularProgressbar\r\n\t\t\t\t\t\t\tclassName=\"circular-progressbar__card\"\r\n\t\t\t\t\t\t\tvalue={movie.vote_average * 10}\r\n\t\t\t\t\t\t\ttext={`${movie.vote_average * 10}%`}\r\n\t\t\t\t\t\t\tstrokeWidth={7}\r\n\t\t\t\t\t\t\tstyles={buildStyles({\r\n\t\t\t\t\t\t\t\ttextColor: '#1B69D9',\r\n\t\t\t\t\t\t\t\tpathColor: '#1B69D9',\r\n\t\t\t\t\t\t\t\ttrailColor: '',\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div>лайк компонент</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<p>{movie.overview}</p>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t\t<div>\r\n\t\t\t\t<Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\r\n\t\t\t\t\t<Tab eventKey=\"home\" title=\"Details\">\r\n\t\t\t\t\t\t<Tab1 movie={movie} />\r\n\t\t\t\t\t</Tab>\r\n\t\t\t\t\t<Tab eventKey=\"profile\" title=\"Video\">\r\n\t\t\t\t\t\t<Image />\r\n\t\t\t\t\t</Tab>\r\n\t\t\t\t\t<Tab eventKey=\"contact\" title=\"Actors\">\r\n\t\t\t\t\t\t<Image />\r\n\t\t\t\t\t</Tab>\r\n\t\t\t\t</Tabs>\r\n\t\t\t</div>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nexport default MoviePage;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport Header from './Header/Header';\r\nimport Home from '../pages/Home/Home';\r\nimport MoviePage from '../pages/MoviePage/MoviePage';\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Header />\r\n\t\t\t{/* <Home /> */}\r\n\t\t\t<Route path=\"/movie-base/\" component={Home} exact />\r\n\t\t\t<Route path=\"/movie-base/movie-page/\" component={MoviePage} exact />\r\n\t\t</>\r\n\t);\r\n};\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store/store';\nimport App from './Components/App';\n\nReactDOM.render(\n\t<Router>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</Router>,\n\tdocument.getElementById('root'),\n);\n"],"sourceRoot":""}